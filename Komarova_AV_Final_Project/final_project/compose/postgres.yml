version: "3.9"
services:
  postgres:
    image: postgres:13.2-alpine
    hostname: postgres
    command:  postgres
              -c max_connections=100
              -c shared_buffers=128MB
              -c effective_cache_size=384MB
              -c maintenance_work_mem=32MB
              -c random_page_cost=1.1
              -c work_mem=327kB
              -c shared_preload_libraries=pg_stat_statements
              -c pg_stat_statements.max=10000
              -c pg_stat_statements.track=all
#              -c logging_collector=on
#              -c log_destination=stderr
#              -c checkpoint_completion_target=0.7
#              -c wal_buffers=3932kB
#              -c default_statistics_target=100
#              -c effective_io_concurrency=200
#              -c min_wal_size=1GB
#              -c max_wal_size=4GB
#              -c max_worker_processes=4
#              -c max_parallel_workers_per_gather=2
#              -c max_parallel_workers=4
#              -c max_parallel_maintenance_workers=2
#              -c temp_file_limit=10GB
#              -c log_min_duration_statement=200ms
#              -c idle_in_transaction_session_timeout=10s
#              -c lock_timeout=1s
#              -c statement_timeout=60s

    environment:
      POSTGRES_DB: "employees"
      POSTGRES_USER: "pdn"
      POSTGRES_PASSWORD: "admin"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ../scripts/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
      - ../scripts/fill_tables.sql:/docker-entrypoint-initdb.d/fill_tables.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pdn -d employees"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 10s
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - postgres
    ports:
      - "25432:5432"
